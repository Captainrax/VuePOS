{"remainingRequest":"F:\\Github\\Andreas\\School\\H3\\GUI-Programming3\\VuejsApp2\\VuejsApp2\\node_modules\\thread-loader\\dist\\cjs.js!F:\\Github\\Andreas\\School\\H3\\GUI-Programming3\\VuejsApp2\\VuejsApp2\\node_modules\\babel-loader\\lib\\index.js!F:\\Github\\Andreas\\School\\H3\\GUI-Programming3\\VuejsApp2\\VuejsApp2\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!F:\\Github\\Andreas\\School\\H3\\GUI-Programming3\\VuejsApp2\\VuejsApp2\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\Github\\Andreas\\School\\H3\\GUI-Programming3\\VuejsApp2\\VuejsApp2\\src\\App.vue?vue&type=script&lang=js&","dependencies":[{"path":"F:\\Github\\Andreas\\School\\H3\\GUI-Programming3\\VuejsApp2\\VuejsApp2\\src\\App.vue","mtime":1605613873855},{"path":"F:\\Github\\Andreas\\School\\H3\\GUI-Programming3\\VuejsApp2\\VuejsApp2\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\Github\\Andreas\\School\\H3\\GUI-Programming3\\VuejsApp2\\VuejsApp2\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\Github\\Andreas\\School\\H3\\GUI-Programming3\\VuejsApp2\\VuejsApp2\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"F:\\Github\\Andreas\\School\\H3\\GUI-Programming3\\VuejsApp2\\VuejsApp2\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\Github\\Andreas\\School\\H3\\GUI-Programming3\\VuejsApp2\\VuejsApp2\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport Vue from 'vue';\nimport VueRouter from 'vue-router'; //import { mapState } from 'vuex'\n\nimport Item from \"./components/Item.vue\";\nimport Basket from \"./components/Basket.vue\";\nimport Shelf from \"./components/Shelf.vue\";\nVue.use(VueRouter);\nexport default {\n  data: function data() {\n    return {\n      items: [{\n        text: \"2\",\n        text2: \"name\",\n        text3: \"this is a description\"\n      }, {\n        text: \"2\",\n        text2: \"lmao\",\n        text3: \"this is a description\"\n      }, {\n        text: \"3\",\n        text2: \"lmao\",\n        text3: \"this is a description\"\n      }, {\n        text: \"4\",\n        text2: \"lmao\",\n        text3: \"this is a description\"\n      }],\n      basket: []\n    };\n  },\n  name: 'app',\n  components: {\n    Item: Item,\n    Basket: Basket,\n    Shelf: Shelf\n  },\n  methods: {\n    addNewItem: function addNewItem() {//alert(\"lmao\");\n      //this.items = list;\n      //alert(\"lmao2\");\n    },\n    addToBasket: function addToBasket(item) {\n      this.basket.push(item); //price update\n\n      var price = 0;\n      this.basket.forEach(function (newItem) {\n        price = parseInt(price) + parseInt(newItem.text);\n      });\n      document.querySelector(\"#totalamount\").textContent = \"Price: \" + price;\n    },\n    removeItemBasket: function removeItemBasket(item) {\n      for (var idx in this.basket) {\n        if (this.basket[idx].text == item.text) {\n          break;\n        }\n      }\n\n      this.basket.splice(idx, 1); // price update, i know i can do this more dynamically.. but idk how\n\n      var price = 0;\n      this.basket.forEach(function (newItem) {\n        price = parseInt(price) + parseInt(newItem.text);\n      });\n      document.querySelector(\"#totalamount\").textContent = \"Price: \" + price;\n    },\n    goBack: function goBack() {\n      window.history.length > 1 ? this.$router.go(-1) : this.$router.push('/');\n    }\n  },\n  mounted: function mounted() {}\n};",{"version":3,"sources":["App.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+BA,OAAA,GAAA,MAAA,KAAA;AACA,OAAA,SAAA,MAAA,YAAA,C,CACA;;AAEA,OAAA,IAAA;AACA,OAAA,MAAA;AACA,OAAA,KAAA;AAEA,IAAA,GAAA,CAAA,SAAA;AAEA,eAAA;AACA,MADA,kBACA;AACA,WAAA;AACA,aAAA,CACA;AAAA,cAAA,GAAA;AAAA,eAAA,MAAA;AAAA,eAAA;AAAA,OADA,EAEA;AAAA,cAAA,GAAA;AAAA,eAAA,MAAA;AAAA,eAAA;AAAA,OAFA,EAGA;AAAA,cAAA,GAAA;AAAA,eAAA,MAAA;AAAA,eAAA;AAAA,OAHA,EAIA;AAAA,cAAA,GAAA;AAAA,eAAA,MAAA;AAAA,eAAA;AAAA,OAJA,CADA;AAOA,cAAA;AAPA,KAAA;AAWA,GAbA;AAcA,QAAA,KAdA;AAeA,cAAA;AACA,cADA;AAEA,kBAFA;AAGA;AAHA,GAfA;AAoBA,WAAA;AACA,cADA,wBACA,CACA;AACA;AACA;AACA,KALA;AAMA,eANA,uBAMA,IANA,EAMA;AACA,WAAA,MAAA,CAAA,IAAA,CAAA,IAAA,EADA,CAEA;;AACA,UAAA,QAAA,CAAA;AACA,WAAA,MAAA,CAAA,OAAA,CAAA,UAAA,OAAA,EAAA;AACA,gBAAA,SAAA,KAAA,IAAA,SAAA,QAAA,IAAA,CAAA;AACA,OAFA;AAGA,eAAA,aAAA,CAAA,cAAA,EAAA,WAAA,GAAA,YAAA,KAAA;AACA,KAdA;AAeA,oBAfA,4BAeA,IAfA,EAeA;AACA,WAAA,IAAA,GAAA,IAAA,KAAA,MAAA,EAAA;AACA,YAAA,KAAA,MAAA,CAAA,GAAA,EAAA,IAAA,IAAA,KAAA,IAAA,EAAA;AACA;AACA;AACA;;AACA,WAAA,MAAA,CAAA,MAAA,CAAA,GAAA,EAAA,CAAA,EANA,CAOA;;AACA,UAAA,QAAA,CAAA;AACA,WAAA,MAAA,CAAA,OAAA,CAAA,UAAA,OAAA,EAAA;AACA,gBAAA,SAAA,KAAA,IAAA,SAAA,QAAA,IAAA,CAAA;AACA,OAFA;AAGA,eAAA,aAAA,CAAA,cAAA,EAAA,WAAA,GAAA,YAAA,KAAA;AACA,KA5BA;AA6BA,UA7BA,oBA6BA;AACA,aAAA,OAAA,CAAA,MAAA,GAAA,CAAA,GAAA,KAAA,OAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,GAAA,KAAA,OAAA,CAAA,IAAA,CAAA,GAAA,CAAA;AACA;AA/BA,GApBA;AAqDA,WAAA,mBAAA,CACA;AAtDA,CAAA","sourcesContent":["<template>\r\n    <div id=\"app\">\r\n\r\n        <div class=\"Item\">\r\n            <div class=\"donttouchme\">Shelf: </div>\r\n            <item v-for=\"item in items\"\r\n                  v-bind:item=\"item\"\r\n                  v-bind:key=\"item.string\"\r\n                  @additem=\"addToBasket\"\r\n                  id=\"listitem\">\r\n            </item>\r\n        </div>\r\n        <div class=\"Basket\">\r\n            <div class=\"donttouchme\">Basket: </div>\r\n            <Basket v-for=\"item in basket\"\r\n                    v-bind:item=\"item\"\r\n                    v-bind:key=\"item.string\"\r\n                    @removeitem=\"removeItemBasket\"\r\n                    id=\"basketitem\">\r\n            </Basket>\r\n        </div>\r\n        <div id=\"totalamount\"></div>\r\n\r\n        <!--<p>\r\n            <router-link to=\"/Shelf\">lmao</router-link>\r\n        </p>\r\n        <router-view> </router-view>-->\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import Vue from 'vue';\r\n    import VueRouter from 'vue-router';\r\n    //import { mapState } from 'vuex'\r\n\r\n    import Item from './components/Item.vue';\r\n    import Basket from './components/Basket.vue';\r\n    import Shelf from './components/Shelf.vue';\r\n\r\n    Vue.use(VueRouter);\r\n\r\n    export default {\r\n        data() {\r\n            return {\r\n                items: [\r\n                    { text: \"2\", text2: \"name\", text3: \"this is a description\" },\r\n                    { text: \"2\", text2: \"lmao\", text3: \"this is a description\" },\r\n                    { text: \"3\", text2: \"lmao\", text3: \"this is a description\" },\r\n                    { text: \"4\", text2: \"lmao\", text3: \"this is a description\" }\r\n                ],\r\n                basket: [\r\n                ]\r\n            }\r\n\r\n        },\r\n        name: 'app',\r\n        components: {\r\n            Item,\r\n            Basket,\r\n            Shelf\r\n        },\r\n        methods: {\r\n            addNewItem() {\r\n                //alert(\"lmao\");\r\n                //this.items = list;\r\n                //alert(\"lmao2\");\r\n            },\r\n            addToBasket(item) {\r\n                this.basket.push(item);\r\n                //price update\r\n                var price = 0;\r\n                this.basket.forEach(function (newItem) {\r\n                    price = parseInt(price) + parseInt(newItem.text);\r\n                });\r\n                document.querySelector(\"#totalamount\").textContent = \"Price: \" + price;\r\n            },\r\n            removeItemBasket(item) {\r\n                for (var idx in this.basket) {\r\n                    if (this.basket[idx].text == item.text) {\r\n                        break;\r\n                    }\r\n                }\r\n                this.basket.splice(idx, 1);\r\n                // price update, i know i can do this more dynamically.. but idk how\r\n                var price = 0;\r\n                this.basket.forEach(function (newItem) {\r\n                    price = parseInt(price) + parseInt(newItem.text);\r\n                });\r\n                document.querySelector(\"#totalamount\").textContent = \"Price: \" + price;\r\n            },\r\n            goBack() {\r\n                window.history.length > 1 ? this.$router.go(-1) : this.$router.push('/')\r\n            }\r\n        },\r\n        mounted: function() {\r\n        }\r\n    \r\n};\r\n</script>\r\n\r\n<style>\r\n    #app {\r\n        position: absolute;\r\n        display: grid;\r\n        height: 100%;\r\n        grid-template-columns: 1fr 1fr 1fr;\r\n        grid-template-rows: 1fr 1fr;\r\n        border: solid 2px rgba(0,0,200,0.9);\r\n        overflow: hidden;\r\n    }\r\n    .AddButton {\r\n        display: grid;\r\n        grid-template-columns: 200px;\r\n        grid-template-rows: 1fr 1fr 1fr 1fr;\r\n        justify-content: center;\r\n        align-self: center;\r\n        border: solid 2px rgba(0,220,0,0.9);\r\n        overflow: hidden;\r\n    }\r\n    .Item {\r\n        display: inline-block;\r\n        height: 100%;\r\n        border: solid 2px rgba(0,0,200,0.9);\r\n        overflow-y: scroll;\r\n    }\r\n    .Basket {\r\n        display: inline-block;\r\n        height: 100%;\r\n        border: solid 2px rgba(0,220,200,1);\r\n        overflow-y: scroll;\r\n    }\r\n    #listitem {\r\n        border: solid 1px rgb(0, 0, 0);\r\n    }\r\n    #basketitem{\r\n    border: solid 1px rgb(0, 0, 0);\r\n    }\r\n    #totalamount{\r\n        position: absolute;\r\n        height:20px;\r\n        left: 80%;\r\n        top: 51%;\r\n    }\r\n    .donttouchme{\r\n        user-select: none;\r\n    }\r\n\r\n</style>\r\n\r\n"],"sourceRoot":"src"}]}