{"remainingRequest":"F:\\Github\\Andreas\\School\\H3\\GUI-Programming3\\VuejsApp2\\VuejsApp2\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\Github\\Andreas\\School\\H3\\GUI-Programming3\\VuejsApp2\\VuejsApp2\\src\\components\\Shelf.vue?vue&type=script&lang=js&","dependencies":[{"path":"F:\\Github\\Andreas\\School\\H3\\GUI-Programming3\\VuejsApp2\\VuejsApp2\\src\\components\\Shelf.vue","mtime":1605614131800},{"path":"F:\\Github\\Andreas\\School\\H3\\GUI-Programming3\\VuejsApp2\\VuejsApp2\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\Github\\Andreas\\School\\H3\\GUI-Programming3\\VuejsApp2\\VuejsApp2\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"F:\\Github\\Andreas\\School\\H3\\GUI-Programming3\\VuejsApp2\\VuejsApp2\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\Github\\Andreas\\School\\H3\\GUI-Programming3\\VuejsApp2\\VuejsApp2\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport Item from './Item-Edit.vue';\nimport { mapState, mapMutations } from \"vuex\";\n\nexport default {\n    name: 'Shelf',\n    components: {\n        Item\n    },\n    computed: {\n        ...mapState(\n            [\"items\"]\n\n        )\n    },\n    data() {\n        return {\n            //items: [\n            //    { text: \"2\", text2: \"name\", text3: \"this is a description\" },\n            //    { text: \"2\", text2: \"lmao\", text3: \"this is a description\" },\n            //    { text: \"3\", text2: \"lmao\", text3: \"this is a description\" },\n            //    { text: \"4\", text2: \"lmao\", text3: \"this is a description\" }\n            //],\n\n            input1: \"\",\n            input2: \"\",\n            input3: \"\"\n        }\n    },\n    methods: {\n        ...mapMutations([\n            'ADD_ITEM'\n        ]),\n        addNewItem: function() {\n            let item = {\n                text: this.input1,\n                text2: this.input2,\n                text3: this.input3\n            }\n            //this.items.push(item);\n            this.ADD_ITEM(item)\n\n        },\n        removeItemShelf(item) {\n            for (var idx in this.items) {\n                if (this.items[idx].text == item.text) {\n                    break;\n                }\n            }\n            this.items.splice(idx, 1);\n        },\n        presetvalues() {\n            this.input1 = \"1\";\n            this.input2 = \"Lmao\";\n            this.input3 = \"description\";\n        },\n        //goBack() {\n        //    window.history.length > 1 ? this.$router.go(-1) : this.$router.push('/')\n        //}\n    },\n    mounted: function () {\n        this.presetvalues()\n    }\n}\n",{"version":3,"sources":["Shelf.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAwBA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Shelf.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n    <div>\r\n        <div class=\"AddButton\">\r\n            <div class=\"donttouchme\">Create new shelf item: </div>\r\n            <input v-model=\"input1\" placeholder=\"price\">\r\n            <input v-model=\"input2\" placeholder=\"name\">\r\n            <input v-model=\"input3\" placeholder=\"description\">\r\n            <button v-on:click=\"addNewItem\">create</button>\r\n        </div>\r\n\r\n        <div class=\"Item\">\r\n            <div class=\"donttouchme\">Shelf: </div>\r\n            <item v-for=\"item in items\"\r\n                v-bind:item=\"item\"\r\n                v-bind:key=\"item.string\"\r\n                @removeitem=\"removeItemShelf\"\r\n                @newlist=\"addNewItem\"\r\n                id=\"listitem\">\r\n            </item>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import Item from './Item-Edit.vue';\r\n    import { mapState, mapMutations } from \"vuex\";\r\n\r\n    export default {\r\n        name: 'Shelf',\r\n        components: {\r\n            Item\r\n        },\r\n        computed: {\r\n            ...mapState(\r\n                [\"items\"]\r\n\r\n            )\r\n        },\r\n        data() {\r\n            return {\r\n                //items: [\r\n                //    { text: \"2\", text2: \"name\", text3: \"this is a description\" },\r\n                //    { text: \"2\", text2: \"lmao\", text3: \"this is a description\" },\r\n                //    { text: \"3\", text2: \"lmao\", text3: \"this is a description\" },\r\n                //    { text: \"4\", text2: \"lmao\", text3: \"this is a description\" }\r\n                //],\r\n\r\n                input1: \"\",\r\n                input2: \"\",\r\n                input3: \"\"\r\n            }\r\n        },\r\n        methods: {\r\n            ...mapMutations([\r\n                'ADD_ITEM'\r\n            ]),\r\n            addNewItem: function() {\r\n                let item = {\r\n                    text: this.input1,\r\n                    text2: this.input2,\r\n                    text3: this.input3\r\n                }\r\n                //this.items.push(item);\r\n                this.ADD_ITEM(item)\r\n\r\n            },\r\n            removeItemShelf(item) {\r\n                for (var idx in this.items) {\r\n                    if (this.items[idx].text == item.text) {\r\n                        break;\r\n                    }\r\n                }\r\n                this.items.splice(idx, 1);\r\n            },\r\n            presetvalues() {\r\n                this.input1 = \"1\";\r\n                this.input2 = \"Lmao\";\r\n                this.input3 = \"description\";\r\n            },\r\n            //goBack() {\r\n            //    window.history.length > 1 ? this.$router.go(-1) : this.$router.push('/')\r\n            //}\r\n        },\r\n        mounted: function () {\r\n            this.presetvalues()\r\n        }\r\n    }\r\n</script>\r\n\r\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\r\n<style scoped>\r\n</style>\r\n\r\n"]}]}